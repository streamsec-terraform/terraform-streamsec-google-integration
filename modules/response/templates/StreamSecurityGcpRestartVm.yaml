main:
  params: [VmId]
  steps:
    - parseId:
        assign:
          - parts: ${text.split(VmId, "/")}
          - project: ${parts[1]}
          - zone: ${parts[3]}
          - instance: ${parts[5]}

    - resetVM:
        try:
          call: googleapis.compute.v1.instances.reset
          args:
            project: ${project}
            zone: ${zone}
            instance: ${instance}
        except:
            as: reset_error
            raise: '${"VM reset failed or is not in RUNNING state: " + reset_error.message}'
    - wait:
        call: sys.sleep
        args:
          seconds: 5

    - getStatus:
        try:
          call: googleapis.compute.v1.instances.get
          args:
            project: ${project}
            zone: ${zone}
            instance: ${instance}
          result: vmInfo
        except:
          as: reset_error
          raise: '${"Failed to retrieve VM status after reset: " + reset_error.message}'

    - verifyStatus:
        switch:
          - condition: ${vmInfo.status == "RUNNING"}
            next: done
          - condition: true
            next: failed
    - done:
        return: "VM was successfully reset and is now running."

    - failed:
        raise: '${"VM reset did not complete successfully. Current status:" + vmInfo.status}'
