main:
  params: [input]
  steps:
    # Step 1: Parse input
    - parseInput:
        assign:
          - vm_id: ${input.VmId}
          - mig_id: ${input.GcpInstanceGroupId}
          - vm_parts: ${text.split(vm_id, "/")}
          - mig_parts: ${text.split(mig_id, "/")}

    # Step 1.0: Log received input
    - logInput:
        call: sys.log
        args:
          text: ${"Runbook started Got vm_id; " + vm_id + ", mig_id; " + mig_id}
          severity: INFO

    # Step 1.1: Validate parts
    - validateInputs:
        switch:
          - condition: ${len(vm_parts) < 6 or len(mig_parts) < 6}
            raise:
              status_code: "error"
              message: ${"Invalid format. Got vm_id; " + vm_id + ", mig_id; " + mig_id}

    # Step 1.2: Extract instance info
    - extractInstanceIds:
        assign:
          - project_id: ${vm_parts[1]}
          - zone: ${vm_parts[3]}
          - instance_name: ${vm_parts[5]}
          - instance_uri: ${"https://www.googleapis.com/compute/v1/projects/" + project_id + "/zones/" + zone + "/instances/" + instance_name}

    # Step 1.3: Extract MIG info
    - extractMigInfo:
        assign:
          - mig_scope: ${mig_parts[2]}         # "zones" or "regions"
          - mig_location: ${mig_parts[3]}      # zone or region name
          - mig_name: ${mig_parts[5]}

    # Step 2: Abandon instance from MIG
    - abandonInstance:
        switch:
          - condition: ${mig_scope == "zones"}
            next: abandonFromZonalMig
          - condition: ${mig_scope == "regions"}
            next: abandonFromRegionalMig
          - condition: true
            raise:
                status_code: "error"
                message: ${"Unsupported MIG scope " + mig_scope}

    # Step 2.1: Zonal MIG
    - abandonFromZonalMig:
        try:
          call: googleapis.compute.v1.instanceGroupManagers.abandonInstances
          args:
            project: ${project_id}
            zone: ${mig_location}
            instanceGroupManager: ${mig_name}
            body:
              instances:
                - ${instance_uri}
          result: abandon_result
        except:
          as: abandon_error
          raise:
            status_code: "error"
            message: ${"Failed to abandon instance from Zonal MIG " + abandon_error.body.error.message}
        next: done

    # Step 2.2: Regional MIG
    - abandonFromRegionalMig:
        try:
          call: googleapis.compute.v1.regionInstanceGroupManagers.abandonInstances
          args:
            project: ${project_id}
            region: ${mig_location}
            instanceGroupManager: ${mig_name}
            body:
              instances:
                - ${instance_uri}
          result: abandon_result
        except:
          as: abandon_error
          raise:
            status_code: "error"
            message: ${"Failed to abandon instance from Regional MIG " + abandon_error.body.error.message}
        next: done

    # Final Step
    - done:
        return:
          status_code: "success"
          message: ${"Instance " + instance_name + " successfully abandoned from MIG " + mig_name}
